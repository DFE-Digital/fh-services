run-name: Deploy to ${{ inputs.environment }}

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      environment:
        description: The environment target for deployment
        default: 'Development'
        type: choice
        options:
          - 'Development'
          - 'Test'
          - 'Production'

permissions:
  id-token: write
  contents: read

jobs:
  build-projects-upload-artifacts:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        project: [ src/service/idam-api/,
#                   src/service/notification-api/,
#                   src/service/referral-api/,
#                   src/service/report-api/,
#                   src/service/service-directory-api/,
#                   src/ui/connect-dashboard-ui/,
#                   src/ui/connect-ui/,
#                   src/ui/find-ui/,
#                   src/ui/idam-maintenance-ui/,
#                   src/ui/manage-ui/
                   ]
    uses: ./.github/workflows/build.yml
    with:
      project: ${{ matrix.project }}
    secrets: inherit

  deploy-idam:
    name: Deploy Idam API
    runs-on: ubuntu-22.04
    needs: [ build-projects-upload-artifacts ]
    env:
      ARTIFACT_NAME: idam-api
      PROJECT_NAME: FamilyHubs.Idam.Api
      DATA_PROJECT_NAME: FamilyHubs.Idam.Data
      PROJECT_TYPE: service
      APP_NAME: s181d01-as-fh-idam-api
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup .NET ${{ vars.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Install Entity Framework
        shell: bash
        run: dotnet tool install --global dotnet-ef

      - name: Package Cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./out

      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{ github.workspace }}/src/${{ env.PROJECT_TYPE }}/${{ env.ARTIFACT_NAME }}/src/${{ env.PROJECT_NAME }}/appsettings.json, ./out/appsettings.json"
        env:
          APPINSIGHTS_CONNECTION_STRING: ${{ secrets.IDAM_API_APPINSIGHTS_CONNECTION_STRING }}
          APPINSIGHTS_INSTRUMENTATIONKEY: ${{ vars.IDAM_API_APPINSIGHTS_INSTRUMENTATIONKEY }}
          ConnectionStrings.IdamConnection: ${{ secrets.IDAM_API_CONNECTIONSTRINGS_IDAMCONNECTION }}
          Crypto.clientId: ${{ vars.IDAM_API_CRYPTO_CLIENTID }}
          Crypto.clientSecret: ${{ secrets.IDAM_API_CRYPTO_CLIENTSECRET }}
          Crypto.DbEncryptionIVKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONIVKEY }}
          Crypto.DbEncryptionIVKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONIVKEYSECRETNAME }}
          Crypto.DbEncryptionKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONKEY }}
          Crypto.DbEncryptionKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONKEYSECRETNAME }}
          Crypto.KeyVaultIdentifier: ${{ vars.IDAM_API_CRYPTO_KEYVAULTIDENTIFIER }}
          Crypto.tenantId: ${{ vars.IDAM_API_CRYPTO_TENANTID }}
          Crypto.UseKeyVault: ${{ vars.IDAM_API_CRYPTO_USEKEYVAULT }}
          EventGridUrl: ${{ vars.IDAM_API_EVENTGRIDURL }}
          GovUkOidcConfiguration.BearerTokenSigningKey: ${{ secrets.IDAM_API_GOVUKOIDCCONFIGURATION_BEARERTOKENSIGNINGKEY }}
          ServiceDirectoryApiBaseUrl: ${{ vars.IDAM_API_SERVICEDIRECTORYAPIBASEURL }}

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Apply Database Migration
        uses: ./.github/actions/database-migration
        with:
          db_context: ApplicationDbContext
          data_project_path: ${{ github.workspace }}/src/${{ env.PROJECT_TYPE }}/${{ env.ARTIFACT_NAME }}/src/${{ env.DATA_PROJECT_NAME }}
          startup_project_path: ${{ github.workspace }}/src/${{ env.PROJECT_TYPE }}/${{ env.ARTIFACT_NAME }}/src/${{ env.PROJECT_NAME }}
          azure_resource_group: ${{ vars.AZURE_RESOURCE_GROUP }}
          azure_sql_server_resource_name: ${{ vars.AZURE_SQL_SERVER_RESOURCE_NAME }}

      - name: Deploy Artifact to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_IDAM_API }}
          package: ./out
