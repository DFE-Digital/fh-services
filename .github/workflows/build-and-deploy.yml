name: Build & Deploy

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: ["main", "release-*"]
  pull_request:        # TODO: REMOVE AFTER TESTING
    branches: ["main"] # TODO: REMOVE AFTER TESTING

env:
  DOTNET_VERSION: "7.0.x"
  WORKING_DIRECTORY: "${{ github.workspace }}/src/service/idam-api/"

jobs:
  build-project-upload-artifact: # TODO: This can be made generic and reusable for any project
    name: Build Project & Upload Artifact
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Package Cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Project
        shell: bash
        run: dotnet restore

      - name: Publish Project
        shell: bash
        run: dotnet publish --configuration Release --no-restore --property:PublishDir=${{ env.WORKING_DIRECTORY }}/out

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: IDAM_API_Artifact
          path: ${{ env.WORKING_DIRECTORY }}/out
          if-no-files-found: error


  deploy-project-to-azure:
    name: Deploy Artifact to Azure
    runs-on: ubuntu-22.04
    needs: [build-project-upload-artifact]
    environment: Development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: IDAM_API_Artifact
          path: ./out

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Entity Framework
        run: dotnet tool install --global dotnet-ef

      - name: Restore Project
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: dotnet restore

      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{ env.WORKING_DIRECTORY }}/src/FamilyHubs.Idam.Api/appsettings.json, ./out/appsettings.json"
        env:
          APPINSIGHTS_CONNECTION_STRING: ${{ secrets.IDAM_API_APPINSIGHTS_CONNECTION_STRING }}
          APPINSIGHTS_INSTRUMENTATIONKEY: ${{ vars.IDAM_API_APPINSIGHTS_INSTRUMENTATIONKEY }}
          ConnectionStrings.IdamConnection: ${{ secrets.IDAM_API_CONNECTIONSTRINGS_IDAMCONNECTION }}
          Crypto.clientId: ${{ vars.IDAM_API_CRYPTO_CLIENTID }}
          Crypto.clientSecret: ${{ secrets.IDAM_API_CRYPTO_CLIENTSECRET }}
          Crypto.DbEncryptionIVKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONIVKEY }}
          Crypto.DbEncryptionIVKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONIVKEYSECRETNAME }}
          Crypto.DbEncryptionKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONKEY }}
          Crypto.DbEncryptionKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONKEYSECRETNAME }}
          Crypto.KeyVaultIdentifier: ${{ vars.IDAM_API_CRYPTO_KEYVAULTIDENTIFIER }}
          Crypto.tenantId: ${{ vars.IDAM_API_CRYPTO_TENANTID }}
          Crypto.UseKeyVault: ${{ vars.IDAM_API_CRYPTO_USEKEYVAULT }}
          EventGridUrl: ${{ vars.IDAM_API_EVENTGRIDURL }}
          GovUkOidcConfiguration.BearerTokenSigningKey: ${{ secrets.IDAM_API_GOVUKOIDCCONFIGURATION_BEARERTOKENSIGNINGKEY }}
          ServiceDirectoryApiBaseUrl: ${{ vars.IDAM_API_SERVICEDIRECTORYAPIBASEURL }}

      - name: Get Workflow Runner IP
        id: runner-ip
        uses: ./.github/actions/get-runner-ip-address

      - name: 'Azure CLI Login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_DEVELOPMENT }}

      - name: Add Azure Firewall Rule
        uses: ./.github/actions/azure-firewall-ip
        with:
          ip_address: ${{ steps.runner-ip.outputs.ip_address }}
          action: "Add"
          az_resource_group: ${{ env.RESOURCE_GROUP }}
          az_sql_server_name: ${{ env.SQL_SERVER_RESOURCE_NAME }}

      - name: Apply Database Migration
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: dotnet ef database update -c ApplicationDbContext --project src/FamilyHubs.Idam.Data --startup-project src/FamilyHubs.Idam.Api

#      - name: Deploy Artifact to Azure Service App
#        uses: azure/webapps-deploy@v3
#        with:
#          app-name: s181d01-as-fh-idam-api
#          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_IDAM_API }}
#          package: ./out

      - name: Remove Azure Firewall Rule
        if: always()
        uses: ./.github/actions/azure-firewall-ip
        with:
          ip_address: ${{ steps.runner-ip.outputs.ip_address }}
          action: "Remove"
          az_resource_group: ${{ env.RESOURCE_GROUP }}
          az_sql_server_name: ${{ env.SQL_SERVER_RESOURCE_NAME }}
