name: Build & Deploy

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: ["main", "release-*"]
  pull_request:        # TODO: REMOVE AFTER TESTING
    branches: ["main"] # TODO: REMOVE AFTER TESTING

env:
  DOTNET_VERSION: "7.0.x"
  ENTITY_FRAMEWORK_VERSION: "7.x"
  WORKING_DIRECTORY: "${{ github.workspace }}/src/service/idam-api/"

jobs:
#  build-project-upload-artifact: # TODO: This can be made generic and reusable for any project
#    name: Build Project & Upload Artifact
#    runs-on: ubuntu-22.04
#    defaults:
#      run:
#        working-directory: ${{ env.WORKING_DIRECTORY }}
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.ref }}
#
#      - name: Setup .NET ${{ env.DOTNET_VERSION }}
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: ${{ env.DOTNET_VERSION }}
#
#      - name: Package Cache
#        uses: actions/cache@v4
#        with:
#          path: ~/.nuget/packages
#          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
#          restore-keys: |
#            ${{ runner.os }}-nuget-
#
#      - name: Restore Project
#        shell: bash
#        run: dotnet restore
#
#      - name: Publish Project
#        shell: bash
#        run: dotnet publish --configuration Release --no-restore --property:PublishDir=${{ env.WORKING_DIRECTORY }}/out
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: IDAM_API_Artifact
#          path: ${{ env.WORKING_DIRECTORY }}/out
#          if-no-files-found: error


  deploy-project-to-azure:
    name: Deploy Artifact to Azure
    runs-on: ubuntu-22.04
    # needs: [build-project-upload-artifact]
    environment: Development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Entity Framework
        run: dotnet tool install --global dotnet-ef --version ${{ env.ENTITY_FRAMEWORK_VERSION }}

      - name: Restore Project
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: dotnet restore

      - name: App Settings Variable Substitution # TODO: Also add 'release/appsettings.json' from artifact DL to this
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{ env.WORKING_DIRECTORY }}/src/FamilyHubs.Idam.Api/appsettings.json"
        env:
          APPINSIGHTS_CONNECTION_STRING: ${{ secrets.IDAM_API_APPINSIGHTS_CONNECTION_STRING }}
          APPINSIGHTS_INSTRUMENTATIONKEY: ${{ vars.IDAM_API_APPINSIGHTS_INSTRUMENTATIONKEY }}
          ConnectionStrings.IdamConnection: ${{ secrets.IDAM_API_CONNECTIONSTRINGS_IDAMCONNECTION }}
          Crypto.clientId: ${{ vars.IDAM_API_CRYPTO_CLIENTID }}
          Crypto.clientSecret: ${{ secrets.IDAM_API_CRYPTO_CLIENTSECRET }}
          Crypto.DbEncryptionIVKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONIVKEY }}
          Crypto.DbEncryptionIVKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONIVKEYSECRETNAME }}
          Crypto.DbEncryptionKey: ${{ secrets.IDAM_API_CRYPTO_DBENCRYPTIONKEY }}
          Crypto.DbEncryptionKeySecretName: ${{ vars.IDAM_API_CRYPTO_DBENCRYPTIONKEYSECRETNAME }}
          Crypto.KeyVaultIdentifier: ${{ vars.IDAM_API_CRYPTO_KEYVAULTIDENTIFIER }}
          Crypto.tenantId: ${{ vars.IDAM_API_CRYPTO_TENANTID }}
          Crypto.UseKeyVault: ${{ vars.IDAM_API_CRYPTO_USEKEYVAULT }}
          EventGridUrl: ${{ vars.IDAM_API_EVENTGRIDURL }}
          GovUkOidcConfiguration.BearerTokenSigningKey: ${{ secrets.IDAM_API_GOVUKOIDCCONFIGURATION_BEARERTOKENSIGNINGKEY }}
          ServiceDirectoryApiBaseUrl: ${{ vars.IDAM_API_SERVICEDIRECTORYAPIBASEURL }}

        # TODO: This should fail cos I haven't added login step

      - name: Apply Database Migration
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: dotnet ef database update -c ApplicationDbContext --project src/FamilyHubs.Idam.Data --startup-project src/FamilyHubs.Idam.Api
