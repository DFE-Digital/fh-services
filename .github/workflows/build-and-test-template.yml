name: Build & Test Template

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      dotnet_version:
        required: true
        type: string
      job_name:
        required: true
        type: string

jobs:
  build_and_test:
    name: Build Project & Run Tests
    runs-on: 'ubuntu-22.04'
    defaults:
      run:
        working-directory: src/${{ inputs.working_directory }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup .NET ${{ inputs.dotnet_version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      # SonarCloud Scanner
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

#      - name: Install Report Tool
#        shell: bash
#        run: dotnet tool install --global LiquidTestReports.Cli --version 2.0.0-beta.2

      - name: NuGet Package Cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: SonarCloud Package Cache
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud Scanner
        shell: bash
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install DotNet Coverage
        shell: bash
        run: dotnet tool install --global dotnet-coverage

      - name: Install & Configure Spatialite
        if: ${{ inputs.working_directory == 'service/service-directory-api' || inputs.working_directory == 'service/referral-api' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install libspatialite-dev libsqlite3-mod-spatialite -y
          sudo ldconfig "/usr/lib/x86_64-linux-gnu/mod_spatialite.so"

      - name: Start SonarCloud Scanner
        shell: bash
        run: |
          dotnet-sonarscanner begin \
          /k:"DFE-Digital_fh-services" \
          /o:"dfe-digital" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
          /d:sonar.coverage.exclusions=**.js,**.html,**/wwwroot/** \
          /d:sonar.scanner.skipJreProvisioning=true \
          /d:sonar.scanner.scanAll=false

      - name: Restore Project
        shell: bash
        run: dotnet restore

      - name: Build Project
        shell: bash
        run: dotnet build --configuration Release --no-restore

      - name: Test Project
        shell: bash
#        run: dotnet test --configuration Release --logger "trx;LogFileName=test-results.trx" --verbosity minimal --no-restore --no-build
        run: dotnet test --configuration Release --verbosity minimal --collect:"XPlat Code Coverage" --no-restore --no-build

      - name: Merge Test Results
        shell: bash
        run: dotnet-coverage merge -f xml -o "coverage.xml" -s "coverage.settings.xml" -r coverage.cobertura.xml

      - name: End SonarCloud Scanner
        shell: bash
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

#      - name: Generate Report
#        if: always()
#        shell: bash
#        run: |-
#          if find ./tests -name "*.trx" -print -quit | grep -q .;
#          then
#            liquid --inputs "File=**/*test-results.trx" --output-file results.md --title "${{ inputs.job_name }}"
#            cat results.md >> $GITHUB_STEP_SUMMARY
#           else
#            echo "Skipping - No tests found in this project."
#           fi
