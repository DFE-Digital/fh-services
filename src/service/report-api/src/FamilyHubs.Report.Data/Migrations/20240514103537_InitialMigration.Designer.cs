// <auto-generated />
using System;
using FamilyHubs.Report.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyHubs.Report.Data.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    [Migration("20240514103537_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FamilyHubs.Report.Data.Entities.DateDim", b =>
                {
                    b.Property<int>("DateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DateKey"));

                    b.Property<byte>("CalendarQuarter")
                        .HasColumnType("tinyint");

                    b.Property<short>("CalendarYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateString")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte>("DayOfMonth")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DayOfWeek")
                        .HasColumnType("tinyint");

                    b.Property<string>("DayOfWeekName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("DayOfYear")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsLeapYear")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte>("MonthOfYear")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WeekOfYear")
                        .HasColumnType("tinyint");

                    b.HasKey("DateKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("DateKey"));

                    b.ToTable("DateDim");
                });

            modelBuilder.Entity("FamilyHubs.Report.Data.Entities.OrganisationDim", b =>
                {
                    b.Property<int>("OrganisationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganisationKey"));

                    b.Property<string>("AdminAreaCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<short>("OrganisationTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("OrganisationTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("OrganisationKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("OrganisationKey"));

                    b.ToTable("OrganisationDim");
                });

            modelBuilder.Entity("FamilyHubs.Report.Data.Entities.ServiceSearchFact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DateKey")
                        .HasColumnType("int");

                    b.Property<int>("HttpResponseCode")
                        .HasColumnType("int");

                    b.Property<int?>("LocationKey")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationKey")
                        .HasColumnType("int");

                    b.Property<Guid>("SearchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchPostcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("SearchRadiusMiles")
                        .HasColumnType("tinyint");

                    b.Property<short?>("ServiceInfoKey")
                        .HasColumnType("smallint");

                    b.Property<int?>("ServiceKey")
                        .HasColumnType("int");

                    b.Property<int?>("TaxonomyKey")
                        .HasColumnType("int");

                    b.Property<int?>("TimeKey")
                        .HasColumnType("int");

                    b.Property<int?>("UserKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("DateKey");

                    b.HasIndex("OrganisationKey");

                    b.ToTable("ServiceSearchFacts");
                });

            modelBuilder.Entity("FamilyHubs.Report.Data.Entities.ServiceSearchFact", b =>
                {
                    b.HasOne("FamilyHubs.Report.Data.Entities.DateDim", "DateDim")
                        .WithMany()
                        .HasForeignKey("DateKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyHubs.Report.Data.Entities.OrganisationDim", "OrganisationDim")
                        .WithMany()
                        .HasForeignKey("OrganisationKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateDim");

                    b.Navigation("OrganisationDim");
                });
#pragma warning restore 612, 618
        }
    }
}
