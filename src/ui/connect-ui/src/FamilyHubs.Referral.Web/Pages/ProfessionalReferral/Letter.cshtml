@page
@model FamilyHubs.Referral.Web.Pages.ProfessionalReferral.LetterModel
@{
    ViewData["Title"] = Model.HeadingText;
    Model.Errors.ErrorIdToHtmlElementId = errorId => errorId switch
    {
        (int)ErrorId.Letter_AddressLine1 => "AddressLine1",
        (int)ErrorId.Letter_TownOrCity => "TownOrCity",
        (int)ErrorId.Letter_Postcode => "Postcode",
        _ => throw new SwitchExpressionException(errorId)
    };
}

@section Back {
    <a href="@Model.BackUrl" class="govuk-back-link">Back</a>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <partial name="_ErrorSummaryNext" for="@Model.Errors"/>

        <form method="post" novalidate>
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                    <h1 class="govuk-fieldset__heading">
                        @Model.HeadingText
                    </h1>
                </legend>
                @{Error? addressError = Model.Errors.GetErrorIfTriggered((int)ErrorId.Letter_AddressLine1); }

                @* we could drive these from data *@
                <div class="govuk-form-group @(addressError?.FormGroupClass)">
                    <label asp-for="AddressLine1" class="govuk-label">
                        Address line 1
                    </label>
                    <partial name="_ErrorMessageNext" model="addressError"/>
                    <input asp-for="AddressLine1" class="govuk-input @(addressError?.InputClass)" type="text" autocomplete="off" aria-describedby="@(addressError?.InputErrorMessageParaId)">
                </div>
                <div class="govuk-form-group">
                    <label asp-for="AddressLine2" class=" govuk-label">
                        Address line 2 (optional)
                    </label>
                    <input asp-for="AddressLine2" class="govuk-input" type="text" autocomplete="off">
                </div>

                @{Error? townError = Model.Errors.GetErrorIfTriggered((int)ErrorId.Letter_TownOrCity); }
                <div class="govuk-form-group @(townError?.FormGroupClass)">
                    <label asp-for="TownOrCity" class="govuk-label">
                        Town or city
                    </label>
                    <partial name="_ErrorMessageNext" model="townError"/>
                    <input asp-for="TownOrCity" class="govuk-input govuk-!-width-two-thirds @(townError?.InputClass)" type="text" autocomplete="off" aria-describedby="@(townError?.InputErrorMessageParaId)">
                </div>
                <div class="govuk-form-group">
                    <label asp-for="County" class="govuk-label">
                        County (optional)
                    </label>
                    <input asp-for="County" class="govuk-input govuk-!-width-two-thirds" type="text" autocomplete="off">
                </div>

                @{Error? postcodeError = Model.Errors.GetErrorIfTriggered((int)ErrorId.Letter_Postcode); }
                <div class="govuk-form-group @(postcodeError?.FormGroupClass)">
                    <label asp-for="Postcode" class="govuk-label">
                        Postcode
                    </label>
                    <partial name="_ErrorMessageNext" model="postcodeError"/>
                    <input asp-for="Postcode" class="govuk-input govuk-input--width-10 @(townError?.InputClass)" type="text" autocomplete="off" aria-describedby="@(postcodeError?.InputErrorMessageParaId)">
                </div>
            </fieldset>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                Continue
            </button>
        </form>

    </div>
</div>
