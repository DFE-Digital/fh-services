@page
@using FamilyHubs.ServiceDirectory.Shared.Enums
@using FamilyHubs.SharedKernel.Enums
@using FamilyHubs.SharedKernel.Razor.Lists
@using FamilyHubs.SharedKernel.Razor.Summary
@model LocalOfferDetailModel
@{
    ViewData["Title"] = Model.LocalOffer.Name;

    var locations = Model.LocalOffer.Locations.OrderBy(l => l.Distance);
}

@section Back {
    @if (!string.IsNullOrEmpty(Model.ReturnUrl) && Model.ReturnUrl.Contains("Safeguarding"))
    {
        @* we _could_ store the postcode (and current page) through the journey and take them back to the correct results page *@
        @* <a asp-page="/ProfessionalReferral/LocalOfferResults" class="govuk-back-link" data-testid="back-button"
           asp-route-postcode="" asp-route-currentPage="">Back</a>*@

        @* as we don't, send them back to the search page instead *@
        <a asp-page="/ProfessionalReferral/Search" class="govuk-back-link" data-testid="back-button">Back</a>
    }
    else
    {
        <a href="@Model.ReturnUrl" class="govuk-back-link" data-testid="back-button">Back</a>
    }
}

<div class="govuk-grid-row">
    @*todo: proto has heading in full width div, but don't think that's correct!? *@
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l govuk-!-margin-bottom-6" data-testid="service-name">@Model.LocalOffer.Name</h1>
        <p class="govuk-!-margin-bottom-6 fh-pre-wrap" data-testid="service-summary">@Model.LocalOffer.Summary</p>
        <h2 class="govuk-heading-m">Service details</h2>

        @* todo: show bsl, translations in language? *@

        <summary-list class="govuk-!-margin-bottom-9">
            <summary-row key="Support it offers" show-empty>
                @if (Model.LocalOffer.Taxonomies?.Any() == true)
                {
                    <govuk-ul items="@Model.LocalOffer.Taxonomies.Select(t => t.Name).Order()"></govuk-ul>
                }
            </summary-row>
            
            <summary-row key="Does support relate to children or young people?" show-empty>
                @{
                    var eligibility = Model.LocalOffer.Eligibilities?.FirstOrDefault();
                    if (eligibility == null)
                    {
                        <text>No</text>
                    }
                    else
                    {
                        <text>Yes, @AgeToString(eligibility.MinimumAge) years old to @AgeToString(eligibility.MaximumAge) years old</text>
                    }
                }
            </summary-row>
            
            <summary-row key="Languages" show-empty>
                @if (Model.LocalOffer.Languages?.Any() == true)
                {
                    <govuk-ul items="@Model.LocalOffer.Languages.Select(t=> t.Name).Order()"></govuk-ul>
                }
            </summary-row>

            <summary-row key="Cost" show-empty>
                @if (Model.LocalOffer.CostOptions?.Any() == true)
                {
                    <text>Yes, it costs money to use. @Model.LocalOffer.CostOptions.First().AmountDescription</text>
                }
                else
                {
                    <text>Free</text>
                }
            </summary-row>

            <summary-row key="How this service is provided" show-empty>
                @if (Model.LocalOffer.ServiceDeliveries?.Any() == true)
                {
                    @string.Join(", ", Model.LocalOffer.ServiceDeliveries
                        .Select(s =>
                        {
                            string desc = s.Name.ToDescription();
                            return desc[0] + desc[1..].ToLower();
                        })
                        .Order())
                }
            </summary-row>
        </summary-list>
        
        @if (locations.Any())
        {
            int locationNumber = 0;
            foreach (var location in locations)
            {
                <h2 class="govuk-heading-m">Location @(++locationNumber)</h2>
                <summary-list class="govuk-!-margin-bottom-9">

                    <summary-row key="Address" show-empty>
                        <govuk-ul items="@location.GetAddress()"></govuk-ul>
                    </summary-row>

                    <summary-row key="Family hub">
                        @(location.LocationTypeCategory == LocationTypeCategory.FamilyHub ? "Yes" : "No")
                    </summary-row>
                    
                    @* todo: 'None provided' or just blank? *@
                    <summary-row key="Location details" show-empty class="fh-pre-wrap">@location.Description.GetDisplay()</summary-row>
                    
                    <summary-row key="Days service is available" show-empty>
                        @* todo *@
                        @*                         @location.Schedules.FirstOrDefault()?.Times.GetDayNames()) *@
                    </summary-row>
                    @*todo: same data, different key to location-for-service page*@
                    <summary-row key="Extra availability details" show-empty class="fh-pre-wrap">@*todo: @location.TimeDescription.GetDisplay() *@</summary-row>

                </summary-list>
            }
        }

        <h2 class="govuk-heading-m">More details</h2>
        <p class="fh-pre-wrap" data-testid="description-value">@Model.LocalOffer.Description</p>

        <h2 class="govuk-heading-m">Contact details</h2>
        
        <summary-list>
            <summary-row key="Email" show-empty>
                <a href="mailto:@Model.Email">
                    @Model.Email
                </a>
            </summary-row>
            <summary-row key="Phone" show-empty>
                <a href="tel:@Model.Phone">@Model.Phone</a>
            </summary-row>
            <summary-row key="Website" show-empty>
                @if (!string.IsNullOrEmpty(Model.Website))
                {
                    <a href="@Model.Website">
                        @Model.Website
                    </a>
                }
            </summary-row>
            <summary-row key="Text message" show-empty>
                @Model.Text
            </summary-row>
        </summary-list>

@*         <dl class="govuk-summary-list">
            <!-- Contact details -->
            <!-- Phone-->
            @if (!string.IsNullOrEmpty(Model.Phone))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Phone
                    </dt>
                    <dd class="govuk-summary-list__value" data-testid="detailsphone">
                        <a href="tel:@Model.Phone">@Model.Phone</a>
                    </dd>
                </div>
            }

            <!--Email-->
            @if (!string.IsNullOrEmpty(Model.Email))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Email
                    </dt>
                    <dd class="govuk-summary-list__value" data-testid="detailsemail">
                        <a href="mailto:@Model.Email">
                            @Model.Email
                        </a>
                    </dd>
                </div>
            }

            <!--Address-->
            @if (Model.Location != null)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Address
                    </dt>
                    <dd class="govuk-summary-list__value" data-testid="detailsaddress">
                        @Html.Raw(string.Join("<br>", Model.Location.GetAddress()))
                    </dd>
                </div>
            }

            <!--Website-->
            @if (!string.IsNullOrEmpty(Model.Website))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Website
                    </dt>
                    <dd class="govuk-summary-list__value" data-testid="detailswebsite">
                        <a href="@Model.Website">
                            @Model.Website
                        </a>
                    </dd>
                </div>
            }
        </dl> *@

        @if (Model.ShowConnectionRequestButton)
        {
            <h2 class="govuk-heading-m">Request a connection</h2>

            <p>Request a connection between the people who need support and this service. The service will accept or decline the request.</p>

            <a asp-page="/ProfessionalReferral/Safeguarding" role="button" draggable="false" class="govuk-button" data-module="govuk-button"
               asp-route-serviceId="@Model.ServiceId">Request a connection</a>
        }
    </div>
</div>

@functions {
    private static string AgeToString(int age)
    {
        return age == 127 ? "25+" : age.ToString();
    }
}
